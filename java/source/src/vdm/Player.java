package vdm;

//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-06 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;



public class Player implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=pieceType KEEP=NO
  private volatile Object pieceType = null;
// ***** VDMTOOLS END Name=pieceType

// ***** VDMTOOLS START Name=totalPieces KEEP=NO
  private volatile Integer totalPieces = null;
// ***** VDMTOOLS END Name=totalPieces

// ***** VDMTOOLS START Name=unplayedPieces KEEP=NO
  private volatile Integer unplayedPieces = null;
// ***** VDMTOOLS END Name=unplayedPieces

// ***** VDMTOOLS START Name=mills KEEP=NO
@SuppressWarnings("rawtypes")
private volatile HashSet mills = new HashSet();
// ***** VDMTOOLS END Name=mills

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=PlayerSentinel KEEP=NO
  class PlayerSentinel extends Sentinel {

    public final int lost = 0;

    public final int reset = 1;

    public final int Player = 2;

    public final int getMills = 3;

    public final int setMills = 4;

    public final int getPieceType = 5;

    public final int setPieceType = 6;

    public final int decTotalPieces = 7;

    public final int getTotalPieces = 8;

    public final int setTotalPieces = 9;

    public final int decUnplayedPieces = 10;

    public final int getUnplayedPieces = 11;

    public final int setUnplayedPieces = 12;

    public final int nr_functions = 13;


    public PlayerSentinel () throws CGException {}


    public PlayerSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=PlayerSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new PlayerSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=TOTAL_uPIECES KEEP=NO
  public static final Integer TOTAL_uPIECES = new Integer(9);
// ***** VDMTOOLS END Name=TOTAL_uPIECES


// ***** VDMTOOLS START Name=vdm_init_Player KEEP=NO
  private void vdm_init_Player () throws CGException {
    try {
      setSentinel();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Player


// ***** VDMTOOLS START Name=Player KEEP=NO
  public Player () throws CGException {
    vdm_init_Player();
  }
// ***** VDMTOOLS END Name=Player


// ***** VDMTOOLS START Name=Player#1|Object KEEP=NO
@SuppressWarnings("rawtypes")
public Player (final Object type) throws CGException {

    if (!this.pre_Player(type).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in Player");
    vdm_init_Player();
    {

      mills = (HashSet) UTIL.clone(new HashSet());
      pieceType = UTIL.clone(type);
      totalPieces = UTIL.NumberToInt(UTIL.clone(TOTAL_uPIECES));
      unplayedPieces = UTIL.NumberToInt(UTIL.clone(TOTAL_uPIECES));
    }
  }
// ***** VDMTOOLS END Name=Player#1|Object


// ***** VDMTOOLS START Name=pre_Player#1|Object KEEP=NO
  public Boolean pre_Player (final Object type) throws CGException {
    return new Boolean(!UTIL.equals(type, new quotes.UNDEFINED()));
  }
// ***** VDMTOOLS END Name=pre_Player#1|Object


// ***** VDMTOOLS START Name=setMills#1|HashSet KEEP=NO
@SuppressWarnings("rawtypes")
public void setMills (final HashSet m) throws CGException {

    sentinel.entering(((PlayerSentinel) sentinel).setMills);
    try {
      mills = (HashSet) UTIL.clone(m);
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).setMills);
    }
  }
// ***** VDMTOOLS END Name=setMills#1|HashSet


// ***** VDMTOOLS START Name=getMills KEEP=NO
@SuppressWarnings("rawtypes")
public HashSet getMills () throws CGException {

    sentinel.entering(((PlayerSentinel) sentinel).getMills);
    try {
      return mills;
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).getMills);
    }
  }
// ***** VDMTOOLS END Name=getMills


// ***** VDMTOOLS START Name=lost KEEP=NO
  public Boolean lost () throws CGException {

    sentinel.entering(((PlayerSentinel) sentinel).lost);
    try {
      return new Boolean((totalPieces.intValue()) < (new Integer(3).intValue()));
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).lost);
    }
  }
// ***** VDMTOOLS END Name=lost


// ***** VDMTOOLS START Name=reset KEEP=NO
  public void reset () throws CGException {

    sentinel.entering(((PlayerSentinel) sentinel).reset);
    try {

      totalPieces = UTIL.NumberToInt(UTIL.clone(TOTAL_uPIECES));
      unplayedPieces = UTIL.NumberToInt(UTIL.clone(TOTAL_uPIECES));
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).reset);
    }
  }
// ***** VDMTOOLS END Name=reset


// ***** VDMTOOLS START Name=getPieceType KEEP=NO
  public Object getPieceType () throws CGException {

    if (!this.pre_getPieceType().booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in getPieceType");
    sentinel.entering(((PlayerSentinel) sentinel).getPieceType);
    try {
      return pieceType;
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).getPieceType);
    }
  }
// ***** VDMTOOLS END Name=getPieceType


// ***** VDMTOOLS START Name=pre_getPieceType KEEP=NO
  public Boolean pre_getPieceType () throws CGException {
    return new Boolean(!UTIL.equals(pieceType, new quotes.UNDEFINED()));
  }
// ***** VDMTOOLS END Name=pre_getPieceType


// ***** VDMTOOLS START Name=decTotalPieces KEEP=NO
  public void decTotalPieces () throws CGException {

    if (!this.pre_decTotalPieces().booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in decTotalPieces");
    sentinel.entering(((PlayerSentinel) sentinel).decTotalPieces);
    try {
      totalPieces = UTIL.NumberToInt(UTIL.clone(new Integer(totalPieces.intValue() - new Integer(1).intValue())));
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).decTotalPieces);
    }
  }
// ***** VDMTOOLS END Name=decTotalPieces


// ***** VDMTOOLS START Name=pre_decTotalPieces KEEP=NO
  public Boolean pre_decTotalPieces () throws CGException {
    return new Boolean((new Integer(totalPieces.intValue() - new Integer(1).intValue()).intValue()) >= (new Integer(0).intValue()));
  }
// ***** VDMTOOLS END Name=pre_decTotalPieces


// ***** VDMTOOLS START Name=getTotalPieces KEEP=NO
  public Integer getTotalPieces () throws CGException {

    sentinel.entering(((PlayerSentinel) sentinel).getTotalPieces);
    try {
      return totalPieces;
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).getTotalPieces);
    }
  }
// ***** VDMTOOLS END Name=getTotalPieces


// ***** VDMTOOLS START Name=setTotalPieces#1|Integer KEEP=NO
  public void setTotalPieces (final Integer nPieces) throws CGException {

    if (!this.pre_setTotalPieces(nPieces).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in setTotalPieces");
    sentinel.entering(((PlayerSentinel) sentinel).setTotalPieces);
    try {
      totalPieces = UTIL.NumberToInt(UTIL.clone(nPieces));
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).setTotalPieces);
    }
  }
// ***** VDMTOOLS END Name=setTotalPieces#1|Integer


// ***** VDMTOOLS START Name=pre_setTotalPieces#1|Integer KEEP=NO
  public Boolean pre_setTotalPieces (final Integer nPieces) throws CGException {
    return new Boolean((nPieces.intValue()) >= (new Integer(0).intValue()));
  }
// ***** VDMTOOLS END Name=pre_setTotalPieces#1|Integer


// ***** VDMTOOLS START Name=decUnplayedPieces KEEP=NO
  public void decUnplayedPieces () throws CGException {

    if (!this.pre_decUnplayedPieces().booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in decUnplayedPieces");
    sentinel.entering(((PlayerSentinel) sentinel).decUnplayedPieces);
    try {
      unplayedPieces = UTIL.NumberToInt(UTIL.clone(new Integer(unplayedPieces.intValue() - new Integer(1).intValue())));
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).decUnplayedPieces);
    }
  }
// ***** VDMTOOLS END Name=decUnplayedPieces


// ***** VDMTOOLS START Name=pre_decUnplayedPieces KEEP=NO
  public Boolean pre_decUnplayedPieces () throws CGException {
    return new Boolean((new Integer(unplayedPieces.intValue() - new Integer(1).intValue()).intValue()) >= (new Integer(0).intValue()));
  }
// ***** VDMTOOLS END Name=pre_decUnplayedPieces


// ***** VDMTOOLS START Name=getUnplayedPieces KEEP=NO
  public Integer getUnplayedPieces () throws CGException {

    sentinel.entering(((PlayerSentinel) sentinel).getUnplayedPieces);
    try {
      return unplayedPieces;
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).getUnplayedPieces);
    }
  }
// ***** VDMTOOLS END Name=getUnplayedPieces


// ***** VDMTOOLS START Name=setUnplayedPieces#1|Integer KEEP=NO
  public void setUnplayedPieces (final Integer nPieces) throws CGException {

    if (!this.pre_setUnplayedPieces(nPieces).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in setUnplayedPieces");
    sentinel.entering(((PlayerSentinel) sentinel).setUnplayedPieces);
    try {
      unplayedPieces = UTIL.NumberToInt(UTIL.clone(nPieces));
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).setUnplayedPieces);
    }
  }
// ***** VDMTOOLS END Name=setUnplayedPieces#1|Integer


// ***** VDMTOOLS START Name=pre_setUnplayedPieces#1|Integer KEEP=NO
  public Boolean pre_setUnplayedPieces (final Integer nPieces) throws CGException {
    return new Boolean((nPieces.intValue()) >= (new Integer(0).intValue()));
  }
// ***** VDMTOOLS END Name=pre_setUnplayedPieces#1|Integer


// ***** VDMTOOLS START Name=setPieceType#1|Object KEEP=NO
  public void setPieceType (final Object type) throws CGException {

    if (!this.pre_setPieceType(type).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in setPieceType");
    sentinel.entering(((PlayerSentinel) sentinel).setPieceType);
    try {
      pieceType = UTIL.clone(type);
    }
    finally {
      sentinel.leaving(((PlayerSentinel) sentinel).setPieceType);
    }
  }
// ***** VDMTOOLS END Name=setPieceType#1|Object


// ***** VDMTOOLS START Name=pre_setPieceType#1|Object KEEP=NO
  public Boolean pre_setPieceType (final Object type) throws CGException {
    return new Boolean(!UTIL.equals(type, new quotes.UNDEFINED()));
  }
// ***** VDMTOOLS END Name=pre_setPieceType#1|Object

}
;
