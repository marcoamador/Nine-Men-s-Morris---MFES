--
-- THIS FILE IS AUTOMATICALLY GENERATED!!
--
-- Generated at 03-Dec-12 by the UML-VDM++ Link
--
class Game

instance variables
  private board : Board;
  private players : set of Player;
  private currentPieceType : Board`PieceType;

operations
  public reset : () ==> ()
  reset() ==
    is not yet specified;

  public put : seq of nat1 ==> bool
  put(coord) ==
    is not yet specified;

  public getBoard : () ==> Board
  getBoard() ==
  	return board;

  public remove : seq of nat1 ==> ()
  remove(coord) ==
    is not yet specified;

  public isPhaseOne : () ==> bool
  isPhaseOne() ==
    is not yet specified;

  public isPhaseTwo : () ==> bool
  isPhaseTwo() ==
    is not yet specified;

  public move : seq of nat1 * seq of nat1 ==> bool
  move(dest, origin) ==
    is not yet specified;

  public puttable : seq of nat1 ==> bool
  puttable(coord) ==
    is not yet specified;

  public changePlayer : () ==> ()
  changePlayer() ==
    is not yet specified;

  public removable : seq of nat1 ==> bool
  removable(coord) ==
    is not yet specified;

  public movable : seq of nat1 * seq of nat1 ==> bool
  movable(dest, origin) ==
    is not yet specified;

  public getCurrentPieceType : () ==> Board`PieceType
  getCurrentPieceType() ==
    return currentPieceType;

  public getUnplayedPieceCount : () ==> map Board`PieceType to nat
  getUnplayedPieceCount() ==
    is not yet specified;
    
  public getCurrentPlayer : () ==> Player
  getCurrentPlayer() ==
  (
  	dcl p1 : Player;
  	for all p in set players do
  		if p.getPieceType() = currentPieceType
  		then return p
  		else p1 := p;
  	return p1;
  )
  post RESULT.getPieceType() = currentPieceType;

end Game



